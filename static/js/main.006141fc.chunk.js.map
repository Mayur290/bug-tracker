{"version":3,"sources":["components/authToken.js","components/signup.js","components/login.js","components/projectsAdd.js","components/logout.js","App.js","components/Home.js","serviceWorker.js","index.js"],"names":["AuthToken","d","data","username","password","console","log","axios","post","qs","stringify","headers","then","response","token","document","cookie","localStorage","setItem","error","emailRegex","RegExp","SignUp","props","handleSubmit","e","preventDefault","that","formErrors","rest","valid","Object","values","forEach","val","length","formValid","state","credentials","first_name","last_name","email","setState","setTimeout","handleChange","target","name","value","test","this","className","onSubmit","noValidate","htmlFor","placeholder","type","onChange","style","color","fontWeight","to","path","component","Login","Component","handleLogin","event","isLoggedin","inputChanged","cred","id","ProjectAdd","description","output","proj","fetch","method","Authorization","getItem","body","JSON","json","catch","onClick","Logout","handleLogout","logout","get","removeItem","status","loggedIn","App","bool","exact","render","Boolean","window","location","hostname","match","options","position","timeout","offset","transition","Al","template","AlertTemplate","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.006141fc.chunk.js","sourcesContent":["import axios from \"axios\";\nimport qs from \"qs\";\n\nexport default function AuthToken(d) {\n  let data = {};\n  data[\"username\"] = d.username;\n  data[\"password\"] = d.password;\n  console.log(data);\n  const options = {\n    headers: {\n      \"content-type\": \"application/x-www-form-urlencoded\",\n    },\n  };\n  axios\n    .post(\n      \"https://bug-tracker01.herokuapp.com/api/auth\",\n      qs.stringify(data),\n      options\n    )\n    .then(\n      (response) => {\n        console.log(`token: ${response.data.token}`);\n        console.log(\"logged in\");\n        document.cookie = `Token=${response.data.token}`;\n        localStorage.setItem(\"token\", response.data.token);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n}\n","import React, { Component } from \"react\";\nimport \"../App.css\";\nimport axios from \"axios\";\nimport qs from \"qs\";\nimport Login from \"./login.js\";\nimport AuthToken from \"./authToken.js\";\nimport { Route, BrowserRouter as Router, Link } from \"react-router-dom\";\n\n// import AuthToken from \"./authToken.js\";\n\nconst emailRegex = RegExp(\n  /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n);\n\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n\n  // validate form errors being empty\n  Object.values(formErrors).forEach((val) => {\n    val.length > 0 && (valid = false);\n  });\n\n  // validate the form was filled out\n  Object.values(rest).forEach((val) => {\n    val === null && (valid = false);\n  });\n\n  return valid;\n};\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      first_name: null,\n      last_name: null,\n      email: null,\n      password: null,\n      error: false,\n      formErrors: {\n        first_name: \"\",\n        last_name: \"\",\n        email: \"\",\n        password: \"\",\n      },\n    };\n  }\n\n  handleSubmit = (e) => {\n    // console.log(\"submit clicked\");\n    e.preventDefault();\n    let that = this;\n\n    if (formValid(this.state)) {\n      let credentials = {};\n      credentials[\"first_name\"] = this.state.first_name;\n      credentials[\"last_name\"] = this.state.last_name;\n      credentials[\"email\"] = this.state.email;\n      credentials[\"password\"] = this.state.password;\n      console.log(`after form validation`);\n      console.log(credentials);\n\n      // fetch(\"https://bug-tracker01.herokuapp.com/api/signup\", {\n      //   method: \"POST\",\n      //   headers: { \"Content-Type\": \"application/json\" },\n      //   body: JSON.stringify(credentials),\n      // })\n      //   .then((data) => data.json())\n      //   .then((data) => {\n      //     console.log(data);\n      //     // let d = {};\n      //     // d[\"password\"] = this.state.credentials.password;\n      //     // d[\"username\"] = data.username;\n\n      //     // this.props.userAuth(d);\n      //   })\n      //   .catch((error) => console.error(error));\n\n      const options = {\n        headers: {\n          \"content-type\": \"application/x-www-form-urlencoded\",\n        },\n      };\n      axios\n        .post(\n          \"https://bug-tracker01.herokuapp.com/api/signup\",\n          qs.stringify(credentials),\n          options\n        )\n        .then(\n          (response) => {\n            console.log(response.data);\n            let d = {};\n            d[\"password\"] = this.state.password;\n            d[\"username\"] = response.data.username;\n            console.log(d);\n\n            AuthToken(d);\n          },\n          (error) => {\n            console.log(error);\n            console.log(\"signup error\");\n            that.setState({ error: true });\n            setTimeout(function () {\n              that.setState({ error: false });\n            }, 5000);\n          }\n        );\n    } else {\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n    }\n  };\n\n  handleChange = (e) => {\n    e.preventDefault();\n    const { name, value } = e.target;\n    let formErrors = { ...this.state.formErrors };\n\n    switch (name) {\n      case \"first_name\":\n        formErrors.first_name =\n          value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n        break;\n      case \"last_name\":\n        formErrors.last_name =\n          value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n        break;\n      case \"email\":\n        formErrors.email = emailRegex.test(value)\n          ? \"\"\n          : \"invalid email address\";\n        break;\n      case \"password\":\n        formErrors.password =\n          value.length < 6 ? \"minimum 6 characaters required\" : \"\";\n        break;\n      default:\n        break;\n    }\n\n    this.setState({ formErrors, [name]: value });\n  };\n\n  render() {\n    const { formErrors } = this.state;\n\n    return (\n      <>\n        {this.state.error && <span>Error Occured</span>}\n        <div className=\"wrapper\">\n          <div className=\"form-wrapper\">\n            <h1>Create Account</h1>\n            <form onSubmit={this.handleSubmit} noValidate>\n              <div className=\"first_name\">\n                <label htmlFor=\"first_name\">First Name</label>\n                <input\n                  className={formErrors.first_name.length > 0 ? \"error\" : null}\n                  placeholder=\"First Name\"\n                  type=\"text\"\n                  name=\"first_name\"\n                  noValidate\n                  onChange={this.handleChange}\n                />\n                {formErrors.first_name.length > 0 && (\n                  <span className=\"errorMessage\">{formErrors.first_name}</span>\n                )}\n              </div>\n              <div className=\"last_name\">\n                <label htmlFor=\"last_name\">Last Name</label>\n                <input\n                  className={formErrors.last_name.length > 0 ? \"error\" : null}\n                  placeholder=\"Last Name\"\n                  type=\"text\"\n                  name=\"last_name\"\n                  noValidate\n                  onChange={this.handleChange}\n                />\n                {formErrors.last_name.length > 0 && (\n                  <span className=\"errorMessage\">{formErrors.last_name}</span>\n                )}\n              </div>\n              <div className=\"email\">\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  className={formErrors.email.length > 0 ? \"error\" : null}\n                  placeholder=\"Email\"\n                  type=\"email\"\n                  name=\"email\"\n                  noValidate\n                  onChange={this.handleChange}\n                />\n                {formErrors.email.length > 0 && (\n                  <span className=\"errorMessage\">{formErrors.email}</span>\n                )}\n              </div>\n              <div className=\"password\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  className={formErrors.password.length > 0 ? \"error\" : null}\n                  placeholder=\"Password\"\n                  type=\"password\"\n                  name=\"password\"\n                  noValidate\n                  onChange={this.handleChange}\n                />\n                {formErrors.password.length > 0 && (\n                  <span className=\"errorMessage\">{formErrors.password}</span>\n                )}\n              </div>\n              <div className=\"createAccount\">\n                <button type=\"submit\">Create Account</button>\n                {this.state.error && (\n                  <small style={{ color: \"red\", fontWeight: \"bold\" }}>\n                    {\" \"}\n                    Email address already exists{\" \"}\n                  </small>\n                )}\n                <small>\n                  Already Have an Account? &emsp;&emsp;\n                  <Link to=\"/login\">Login</Link>\n                </small>\n                <Router>\n                  <Route path=\"/login\" component={Login} />\n                </Router>\n              </div>\n            </form>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default SignUp;\n","import React, { Component } from \"react\";\nimport \"../App.css\";\nimport axios from \"axios\";\nimport qs from \"qs\";\nimport SignUp from \"./signup.js\";\nimport AuthToken from \"./authToken.js\";\nimport { Route, BrowserRouter as Router, Link } from \"react-router-dom\";\n// import AuthToken from \"./authToken.js\";\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    credentials: { email: \"\", password: \"\" },\n    error: false,\n  };\n\n  handleLogin = (event) => {\n    event.preventDefault();\n    let that = this;\n    const options = {\n      headers: {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n      },\n    };\n    axios\n      .post(\n        \"https://bug-tracker01.herokuapp.com/api/login\",\n        qs.stringify(this.state.credentials),\n        options\n      )\n      .then(\n        (response) => {\n          console.log(response.data);\n          let d = {};\n          d[\"password\"] = this.state.credentials.password;\n          d[\"username\"] = response.data.username;\n          // console.log(d);\n          this.props.isLoggedin(true);\n          // console.log(this.props.value);\n          AuthToken(d);\n        },\n        (error) => {\n          console.log(error);\n          console.log(\"login error\");\n          this.props.isLoggedin(false);\n          that.setState({ error: true });\n          setTimeout(function () {\n            that.setState({ error: false });\n          }, 5000);\n\n          // alert.error(\"Please provide correct credentials!\");\n\n          // console.log(event.target.email.value);\n        }\n      );\n  };\n\n  inputChanged = (event) => {\n    const cred = this.state.credentials;\n    // console.log(event.target.value);\n    cred[event.target.name] = event.target.value;\n    this.setState({ credentials: cred });\n  };\n\n  render() {\n    return (\n      <>\n        {this.state.error && <span>Please provide correct credentials</span>}\n        <div className=\"wrapper\">\n          <div className=\"form-wrapper\">\n            <h1>Login</h1>\n            <form onSubmit={this.handleLogin} noValidate>\n              <div className=\"email\">\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  placeholder=\"Email\"\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  noValidate\n                  value={this.state.credentials.email}\n                  onChange={this.inputChanged}\n                />\n              </div>\n              <div className=\"password\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  placeholder=\"Password\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  noValidate\n                  value={this.state.credentials.password}\n                  onChange={this.inputChanged}\n                />\n              </div>\n              <div className=\"createAccount\">\n                <button type=\"submit\">Login</button>\n                {this.state.error && (\n                  <small style={{ color: \"red\", fontWeight: \"bold\" }}>\n                    {\" \"}\n                    Please provide correct credentials{\" \"}\n                  </small>\n                )}\n                <small>\n                  New here ? &emsp;&emsp;<Link to=\"/signup\">SignUp</Link>{\" \"}\n                </small>\n                <Router>\n                  <Route path=\"/signup\" component={SignUp} />\n                </Router>\n              </div>\n            </form>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\n\nclass ProjectAdd extends Component {\n  state = {\n    credentials: { name: \"\", description: \"\" },\n    output: {},\n  };\n\n  inputChanged = (event) => {\n    const cred = this.state.credentials;\n    cred[event.target.name] = event.target.value;\n    this.setState({ credentials: cred });\n  };\n\n  proj = (event) => {\n    // console.log(this.state.credentials);\n    fetch(\"https://bug-tracker01.herokuapp.com/api/user/project\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${localStorage.getItem(\"token\")}`,\n      },\n      body: JSON.stringify(this.state.credentials),\n    })\n      .then((data) => data.json())\n      .then((data) => {\n        // let d = {};\n        // d[\"password\"] = this.state.credentials.password;\n        // d[\"username\"] = data.username;\n\n        // this.props.userAuth(d);\n        console.log(data);\n      })\n      .catch((error) => console.error(error));\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Project </h1>\n        <label>\n          {\" \"}\n          project names:\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.credentials.name}\n            onChange={this.inputChanged}\n          />\n        </label>\n        <br />\n        <label>\n          {\" \"}\n          project description:\n          <input\n            type=\"text\"\n            name=\"description\"\n            value={this.state.credentials.description}\n            onChange={this.inputChanged}\n          />\n        </label>\n        <br />\n\n        <button onClick={this.proj}>Add project</button>\n      </div>\n    );\n  }\n}\n\nexport default ProjectAdd;\n","import React, { Component } from \"react\";\nimport \"../App.css\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\n// import { AxiosResponse, AxiosError } from 'axios';\n// import qs from \"qs\";\n// import { Route, BrowserRouter as Router, Link } from \"react-router-dom\";\n// import AuthToken from \"./authToken.js\";\nclass Logout extends Component {\n  constructor(props) {\n    super(props);\n\n    const token = localStorage.getItem(\"token\");\n    let loggedIn = true;\n    if (token == null) {\n      loggedIn = false;\n    }\n\n    this.state = {\n      loggedIn,\n    };\n\n    this.handleLogout();\n  }\n\n  handleLogout = (event) => {\n    this.props.logout();\n    axios\n      .get(\"https://bug-tracker01.herokuapp.com/api/logout\", {\n        headers: {\n          Authorization: `Token ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then(\n        (response) => {\n          console.log(\"logout successful\");\n          localStorage.removeItem(\"token\");\n          //   this.forceUpdate();\n          // console.log(d);\n        },\n        (error) => {\n          console.log(`Token ${localStorage.getItem(\"token\")}`);\n          console.log(\"logout error\");\n\n          // alert.error(\"Please provide correct credentials!\");\n\n          // console.log(event.target.email.value);\n        }\n      )\n      .catch(function (error) {\n        if (error.response) {\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        }\n      });\n  };\n\n  render() {\n    if (this.state.loggedIn == false) {\n      return <Redirect to=\"/\" />;\n    }\n    return null;\n  }\n}\n\nexport default Logout;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Login from \"./components/login.js\";\nimport SignUp from \"./components/signup.js\";\nimport ProjectAdd from \"./components/projectsAdd.js\";\nimport Logout from \"./components/logout.js\";\nimport Home from \"./components/Home\";\n// import Header from \"./components/header.js\";\nimport { Route, BrowserRouter as Router, Switch, Link } from \"react-router-dom\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    const token = localStorage.getItem(\"token\");\n    let loggedIn = true;\n    if (token == null) {\n      loggedIn = false;\n    }\n\n    this.state = {\n      loggedIn,\n    };\n  }\n\n  // localStorage.getItem(\"token\")\n\n  isLoggedin = (bool) => {\n    console.log(\"isLoggedin value is \" + bool);\n    this.setState({ loggedIn: bool });\n  };\n\n  logout = () => {\n    this.setState({ loggedIn: false });\n    console.log(\"Logout getting called!\");\n  };\n\n  render() {\n    let { loggedIn } = this.state;\n    return (\n      <Router>\n        <div className=\"App\">\n          <h1> Home page</h1>\n          <nav>\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n\n              {loggedIn ? (\n                <li>\n                  <Link to=\"/logout\">Logout</Link>\n                </li>\n              ) : (\n                <li>\n                  <Link to=\"/login\">Login</Link>\n                </li>\n              )}\n\n              <li>\n                <Link to=\"/project\">Project</Link>\n              </li>\n            </ul>\n          </nav>\n          <Switch>\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/project\" component={ProjectAdd} />\n            <Route\n              path=\"/login\"\n              exact\n              render={() => <Login isLoggedin={this.isLoggedin} />}\n            />\n            <Route\n              path=\"/logout\"\n              render={(props) => <Logout {...props} logout={this.logout} />}\n            />\n            <Route\n              path=\"/\"\n              exact\n              render={() => <Login isLoggedin={this.isLoggedin} />}\n            />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\nimport \"../App.css\";\n\nclass Home extends Component {\n  render() {\n    return <div>Hello</div>;\n  }\n}\n\nexport default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\n\nconst options = {\n  position: \"bottom center\",\n  timeout: 5000,\n  offset: \"30px\",\n  transition: \"scale\",\n};\n\nconst Al = () => (\n  <AlertProvider template={AlertTemplate} {...options}>\n    <App />\n  </AlertProvider>\n);\n\nReactDOM.render(\n  <BrowserRouter>\n    <Al />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}